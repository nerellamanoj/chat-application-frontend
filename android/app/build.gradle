apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"

react {
    /* Uncomment and set paths if needed */
    // root = file("../../")
    // reactNativeDir = file("../../node_modules/react-native")
    // codegenDir = file("../../node_modules/@react-native/codegen")
    // cliFile = file("../../node_modules/react-native/cli.js")

    /* Variants */
    // debuggableVariants = ["liteDebug", "prodDebug"]

    /* Bundling */
    // nodeExecutableAndArgs = ["node"]
    // bundleCommand = "ram-bundle"
    // bundleAssetName = "MyApplication.android.bundle"
    // entryFile = file("../js/MyApplication.android.js")
    // extraPackagerArgs = []

    /* Hermes Commands */
    // hermesCommand = "$rootDir/my-custom-hermesc/bin/hermesc"
    // hermesFlags = ["-O", "-output-source-map"]

    /* Autolinking */
    autolinkLibrariesWithApp()
}

def enableProguardInReleaseBuilds = true // Set to true for production

def jscFlavor = 'org.webkit:android-jsc:+'

android {
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    namespace "com.frontend"
    defaultConfig {
        applicationId "com.frontend"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1 // Update as needed for each release
        versionName "1.0" // Update as needed for each release
    }

    signingConfigs {
        release {
            storeFile file(MYAPP_UPLOAD_STORE_FILE) // Ensure this path is correct
            storePassword MYAPP_UPLOAD_STORE_PASSWORD // Check this password
            keyAlias MYAPP_UPLOAD_KEY_ALIAS // Check this alias
            keyPassword MYAPP_UPLOAD_KEY_PASSWORD // Check this password
        }
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }
    
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.release // Use release signing config
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
}

dependencies {
    implementation("com.facebook.react:react-android")

    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}
